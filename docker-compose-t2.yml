version: "3.9"

########################### NETWORKS
# You may customize the network subnet (192.168.90.0/24) below as you please.
# Docker Compose version 3.5 or higher required to define networks this way.

networks:
  default:
    driver: bridge
  t2_proxy:
    name: t2_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 10.20.10.0/24


########################### EXTENSION FIELDS
# Helps eliminate repetition of sections
# More Info on how to use this: https://github.com/htpcBeginner/docker-traefik/pull/228

# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  networks:
    - t2_proxy
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  networks:
    - t2_proxy
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

# Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
  networks:
    - t2_proxy
  security_opt:
    - no-new-privileges:true
  restart: "no"


########################### SERVICES
services:

############################# FRONTENDS
# Traefik 2 - Reverse Proxy
  traefik:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    container_name: traefik
    image: traefik:2.7

command: # CLI arguments
  - --global.checkNewVersion=true
  - --global.sendAnonymousUsage=true
  - --entryPoints.http.address=:80
  - --entryPoints.https.address=:443
  # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
  - --entrypoints.https.forwardedHeaders.trustedIPs=$CLOUDFLARE_IPS,$LOCAL_IPS
  - --entryPoints.traefik.address=:8080
  - --api=true
  # - --api.insecure=true
  - --api.dashboard=true
  # - --serversTransport.insecureSkipVerify=true
  - --log=true
  - --log.filePath=/logs/traefik.log
  - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
  - --accessLog=true
  - --accessLog.filePath=/logs/access.log
  - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
  - --accessLog.filters.statusCodes=204-299,400-499,500-599
  - --providers.docker=true
  - --providers.docker.endpoint=unix:///var/run/docker.sock # Use Docker Socket Proxy instead for improved security
  # - --providers.docker.endpoint=tcp://socket-proxy:2375 # Use this instead of the previous line if you have socket proxy.
  - --providers.docker.exposedByDefault=false
  - --entrypoints.https.http.tls.options=tls-opts@file
  # Add dns-cloudflare as default certresolver for all services. Also enables TLS and no need to specify on individual services
  - --entrypoints.https.http.tls.certresolver=dns-cloudflare
  - --entrypoints.https.http.tls.domains[0].main=$DOMAINNAME_CLOUD_SERVER
  - --entrypoints.https.http.tls.domains[0].sans=*.$DOMAINNAME_CLOUD_SERVER
  # - --entrypoints.https.http.tls.domains[1].main=$DOMAINNAME2 # Pulls main cert for second domain
  # - --entrypoints.https.http.tls.domains[1].sans=*.$DOMAINNAME2 # Pulls wildcard cert for second domain
  - --providers.docker.network=t2_proxy
  - --providers.docker.swarmMode=false
  - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
  # - --providers.file.filename=/path/to/file # Load dynamic configuration from a file
  - --providers.file.watch=true # Only works on top level files in the rules folder
  - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
  - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
  - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
  - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
  - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
  - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate
